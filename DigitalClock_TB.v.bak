module DigitalClock_TB;

    // Inputs
    reg clk;
    reg reset;

    // Outputs
    wire [6:0] sec_ones_seg;
    wire [6:0] sec_tens_seg;
    wire [6:0] min_ones_seg;
    wire [6:0] min_tens_seg;
    wire [6:0] hour_ones_seg;
    wire [6:0] hour_tens_seg;

    // Instantiate the Unit Under Test (UUT)
    DigitalClock uut (
        .clk(clk),
        .reset(reset),
        .sec_ones_seg(sec_ones_seg),
        .sec_tens_seg(sec_tens_seg),
        .min_ones_seg(min_ones_seg),
        .min_tens_seg(min_tens_seg),
        .hour_ones_seg(hour_ones_seg),
        .hour_tens_seg(hour_tens_seg)
    );

    // Clock generation
    initial begin
        clk = 0;
        forever #5 clk = ~clk; // Toggle clk every 5 ns
    end

    // Test sequence
    initial begin
        // Initialize inputs
        reset = 1;

        // Apply reset
        #10 reset = 0;
        #10 reset = 1;

        // Wait for some time to observe the clock operation
        #1000;

        // Finish simulation
        $finish;
    end

    // Monitor outputs
    initial begin
        $monitor("Time = %0dns, clk = %b, reset = %b, sec_ones_seg = %b, sec_tens_seg = %b, min_ones_seg = %b, min_tens_seg = %b, hour_ones_seg = %b, hour_tens_seg = %b", 
                 $time, clk, reset, sec_ones_seg, sec_tens_seg, min_ones_seg, min_tens_seg, hour_ones_seg, hour_tens_seg);
    end

endmodule
